my data <- read.table("Twitter_Data_1",header=TRUE,sep=",")
my_data <- read.table("Twitter_Data_1",header=TRUE,sep=",")
my_data <- read.table("\Downloads|Twitter_Data_1",header=TRUE,sep=",")
my_data <- read.table("\Downloads\Twitter_Data_1",header=TRUE,sep=",")
my_data <- read.table("Downloads\Twitter_Data_1",header=TRUE,sep=",")
setwd("C:\\Users\\GireshMulani\\Downloads")
setwd(Users\\GireshMulani\\Downloads")
setwd("Users\\GireshMulani\\Downloads")
setwd("Users\\Giresh Mulani\\Downloads")
q()
?dbinom
pnorm()
pnorm(q, mean = -0.33, sd = 1, lower.tail = TRUE, log.p = FALSE)
pnorm(-0.33)
Y=0:10
dgeom(Y, 0.5)
plot(dgeom(Y, 0.5))
plot(dgeom(Y, 0.5), x-axis = y, y-axis = probability)
plot(dgeom(Y, 0.5), xlab = y, ylab = probability)
plot(dgeom(Y, 0.5), xlab = Y, ylab = probability)
plot(dgeom(Y, 0.5), xlab = Y, ylab = p)
plot(dgeom(Y, 0.5), xlab = Y, ylab = "probability")
plot(dgeom(Y, 0.5), xlab = "y", ylab = "probability")
plot(dgeom(Y, 1/3), xlab = "y", ylab = "probability")
plot(dgeom(Y, 0.2), xlab = "y", ylab = "probability")
legend(plot(dgeom(Y, 0.2), xlab = "y", ylab = "probability"))
y <- (1.78, 1.65, 1.62, 1.84, 1.75, 1.85, 1.52, 1.55)
y<- [1.78 1.65 1.62 1.84 1.75 1.85 1.52 1.55]
y<- (1.78 1.65 1.62 1.84 1.75 1.85 1.52 1.55)
y = (1.78 1.65 1.62 1.84 1.75 1.85 1.52 1.55)
y = c(1.78 1.65 1.62 1.84 1.75 1.85 1.52 1.55)
y <- c(1.78, 1.65, 1.62, 1.84, 1.75, 1.85, 1.52, 1.55)
setwd("~/Google Drive/Monash/FIT2086/S2-18/Week 3")
source('~/.active-rstudio-document')
source1 <- read.csv("train.csv")
est = my_estimates(source1$heights)
est$mu_ml
est$var_ml
est$var_u
sqrt(est$var_ml)
sqrt(est$var_u)
clear
source1 <- read.csv("train.csv")
source1 <- read.csv("train.csv")
est = my_estimates(source1$heights)
#function my_estimates was taken from week 3 lab solutions
est$mu_ml
sqrt(est$var_ml)
cat("P(X > 1.8m) =", 1-pnorm(1.8,est$mu_ml,sqrt(est$var_ml)), "(ML);",
1-pnorm(1.8,est$mu_ml,sqrt(est$var_u)), "(unbiased);", mean(test$heights>1.8), "(empirical)\n")
cat("P(X < 1.5m) =", pnorm(1.5,est$mu_ml,sqrt(est$var_ml)), "(ML);",
pnorm(1.5,est$mu_ml,sqrt(est$var_u)), "(unbiased);", mean(test$heights<1.5), "(empirical)\n")
cat("P(X > 1.5m & X < 1.65m) =", pnorm(1.65,est$mu_ml,sqrt(est$var_ml)) - pnorm(1.5,est$mu_ml,sqrt(est$var_ml)), "(ML);",
pnorm(1.65,est$mu_ml,sqrt(est$var_u))-pnorm(1.5,est$mu_ml,sqrt(est$var_u)), "(unbiased);", mean(test$heights > 1.5 & test$heights < 1.65), "(empirical)\n")
cat("P(X > 1.65m & X < 1.8m) =", pnorm(1.8,est$mu_ml,sqrt(est$var_ml)) - pnorm(1.65,est$mu_ml,sqrt(est$var_ml)), "(ML);",
pnorm(1.8,est$mu_ml,sqrt(est$var_u))-pnorm(1.65,est$mu_ml,sqrt(est$var_u)), "(unbiased);", mean(test$heights > 1.65 & test$heights < 1.8), "(empirical)\n")
cat("P(X > 1.8m) =", 1-pnorm(1.8,est$mu_ml,sqrt(est$var_ml)), "(ML);",
1-pnorm(1.8,est$mu_ml,sqrt(est$var_u)), "(unbiased);", mean(source1$heights>1.8), "(empirical)\n")
cat("P(X < 1.5m) =", pnorm(1.5,est$mu_ml,sqrt(est$var_ml)), "(ML);",
pnorm(1.5,est$mu_ml,sqrt(est$var_u)), "(unbiased);", mean(source1$heights<1.5), "(empirical)\n")
cat("P(X > 1.5m & X < 1.65m) =", pnorm(1.65,est$mu_ml,sqrt(est$var_ml)) - pnorm(1.5,est$mu_ml,sqrt(est$var_ml)), "(ML);",
pnorm(1.65,est$mu_ml,sqrt(est$var_u))-pnorm(1.5,est$mu_ml,sqrt(est$var_u)), "(unbiased);", mean(source1$heights > 1.5 & source1$heights < 1.65), "(empirical)\n")
cat("P(X > 1.65m & X < 1.8m) =", pnorm(1.8,est$mu_ml,sqrt(est$var_ml)) - pnorm(1.65,est$mu_ml,sqrt(est$var_ml)), "(ML);",
pnorm(1.8,est$mu_ml,sqrt(est$var_u))-pnorm(1.65,est$mu_ml,sqrt(est$var_u)), "(unbiased);", mean(source1$heights > 1.65 & source1$heights < 1.8), "(empirical)\n")
dbinom(0,10,0.5)
dbinom(0,10,(0.456369+0.1901652))
dbinom(0,10,0.6465342)
160 * 0.456369
(1/6) * (2+3+4+5+6+7)
(1/6) * (1+2+3+4)
4.5 * 1.67
(1/6) * [(5/6)^2 + (11/6)^2 + (17/6)^2 + (23/6)^2]
(1/6) * ((5/6)^2 + (11/6)^2 + (17/6)^2 + (23/6)^2)
1/36 * 10
(1/36) * 10
