my data <- read.table("Twitter_Data_1",header=TRUE,sep=",")
my_data <- read.table("Twitter_Data_1",header=TRUE,sep=",")
my_data <- read.table("\Downloads|Twitter_Data_1",header=TRUE,sep=",")
my_data <- read.table("\Downloads\Twitter_Data_1",header=TRUE,sep=",")
my_data <- read.table("Downloads\Twitter_Data_1",header=TRUE,sep=",")
setwd("C:\\Users\\GireshMulani\\Downloads")
setwd(Users\\GireshMulani\\Downloads")
setwd("Users\\GireshMulani\\Downloads")
setwd("Users\\Giresh Mulani\\Downloads")
q()
?dbinom
pnorm()
pnorm(q, mean = -0.33, sd = 1, lower.tail = TRUE, log.p = FALSE)
pnorm(-0.33)
Y=0:10
dgeom(Y, 0.5)
plot(dgeom(Y, 0.5))
plot(dgeom(Y, 0.5), x-axis = y, y-axis = probability)
plot(dgeom(Y, 0.5), xlab = y, ylab = probability)
plot(dgeom(Y, 0.5), xlab = Y, ylab = probability)
plot(dgeom(Y, 0.5), xlab = Y, ylab = p)
plot(dgeom(Y, 0.5), xlab = Y, ylab = "probability")
plot(dgeom(Y, 0.5), xlab = "y", ylab = "probability")
plot(dgeom(Y, 1/3), xlab = "y", ylab = "probability")
plot(dgeom(Y, 0.2), xlab = "y", ylab = "probability")
legend(plot(dgeom(Y, 0.2), xlab = "y", ylab = "probability"))
x = 1
(213.1-292.7)/sqrt((1135.4971/8) + (20655.634/8))
17/18
binom.test(17, 18, p=0.5)
binom.test(10,18,0.5)
source('~/Google Drive/Monash/FIT2086/S2-18/Week 11/my.prediction.stats.R')
install.packages("pROC")
library(kknn)
library(tree)
ms.train <- read.csv("ms.train.csv")
setwd("~/Google Drive/Monash/FIT2086/S2-18/Assignment 3")
ms.train <- read.csv("ms.train.csv")
ms.test <- read.csv("ms.test.csv")
tree.ms = tree(intensity ~ ., ms.train)
control = tree.control(nobs = 200, mindev = 1e-5)
source('~/Google Drive/Monash/FIT2086/S2-18/Assignment 3/tree.wrappers.R')
source('~/Google Drive/Monash/FIT2086/S2-18/Week 7/my.prediction.stats.R')
cv.ms = learn.tree.cv(tree.ms, nfolds = 10, m = 1000)
cv.mstrain.pred = predict(cv.ms$best.tree, ms.test)
tree.ms = tree(intensity ~ ., ms.train)
tree.ms = tree.ms(nobs = 200, mindev = 1e-5)
tree.msc = tree.ms(nobs = 200, mindev = 1e-5)
tree.ms = tree(intensity ~ ., ms.train)
control = tree.control(nobs = 200, mindev = 1e-5)
cv.ms = learn.tree.cv(tree.ms, nfolds = 10, m = 1000)
